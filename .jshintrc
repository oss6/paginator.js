{
  // See http://jshint.com/docs/ for more details

  "maxerr"        : 50,       // {int} Maximum error before stopping

  // Enforcing
  "bitwise"       : true,     // true: Prohibit bitwise operators (&, |, ^, etc.)
  "camelcase"     : true,    // true: Identifiers must be in camelCase
  "curly"         : true,     // true: Require {} for every new block or scope
  "eqeqeq"        : true,     // true: Require triple equals (===) for comparison
  "forin"         : true,     // true: Require filtering for..in loops with obj.hasOwnProperty()
  "freeze"        : true,     // true: prohibits overwriting prototypes of native objects such as Array, Date etc.
  "immed"         : false,    // true: Require immediate invocations to be wrapped in parens e.g. `(function () { } ());`
  "indent"        : 4,        // {int} Number of spaces to use for indentation
  "latedef"       : true,    // true: Require variables/functions to be defined before being used
  "newcap"        : true,    // true: Require capitalization of all constructor functions e.g. `new F()`
  "noempty"       : true,     // true: Prohibit use of empty blocks
  "nonew"         : false,    // true: Prohibit use of constructors for side-effects (without assignment)
  "plusplus"      : false,    // true: Prohibit use of `++` & `--`
  "quotmark"      : false,    // Quotation mark consistency
  "undef"         : true,     // true: Require all non-global variables to be declared (prevents global leaks)
  "strict"        : true,     // true: Requires all functions run in ES5 Strict Mode

  // Relaxing
  "asi"           : false,     // true: Tolerate Automatic Semicolon Insertion (no semicolons)
  "boss"          : true,     // true: Tolerate assignments where comparisons would be expected
  "eqnull"        : false,     // true: Tolerate use of `== null`
  "evil"          : false,     // true: Tolerate use of `eval` and `new Function()`
  "expr"          : false,     // true: Tolerate `ExpressionStatement` as Programs
  "funcscope"     : true,     // true: Tolerate defining variables inside control statements
  "lastsemic"     : true,     // true: Tolerate omitting a semicolon for the last statement of a 1-line block
  "multistr"      : true,     // true: Tolerate multi-line strings
  "notypeof"      : false,     // true: Tolerate invalid typeof operator values
  "proto"         : false,     // true: Tolerate using the `__proto__` property
  "shadow"        : true,     // true: Allows re-define variables later in code e.g. `var x=1; x=2;`
  "supernew"      : false,     // true: Tolerate `new function () { ... };` and `new Object;`
  "validthis"     : true,     // true: Tolerate using this in a non-constructor function

  // Environments
  "browser"       : true     // Web Browser (window, document, etc)
}